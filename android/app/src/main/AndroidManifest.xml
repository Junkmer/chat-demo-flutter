<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.tencent.flutter.tuikit"
    xmlns:tools="http://schemas.android.com/tools">
    <application
        android:name=".application.TIMApplication"
        android:label="@string/android_label"
        tools:replace="android:label"
        android:icon="@mipmap/ic_launcher"
        android:usesCleartextTraffic="true"
        android:requestLegacyExternalStorage="true">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:showWhenLocked="true"
            android:turnScreenOn="true"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme"/>
            <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background"/>
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <!-- Deep Links -->
            <intent-filter>
                <action
                    android:name="android.intent.action.VIEW"/>
                <category
                    android:name="android.intent.category.DEFAULT"/>
                <category
                    android:name="android.intent.category.BROWSABLE"/>
                <!-- Accepts URIs that begin with YOUR_SCHEME://YOUR_HOST -->
                <data
                    android:scheme="uikitflutterdemo"
                    android:host="dl"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
            This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2"/>
        <meta-data
            android:name="com.baidu.lbsapi.API_KEY"
            android:value="jjINVRaE1vsCYXMu3L7u2tM8CHByKmQB"/>
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="c702255c2379fdcc28c381d7986d338b"/>
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="105558479"/>
    </application>
    <!--vivo 开始-->
    <uses-permission
        android:name="com.vivo.notification.permission.BADGE_ICON"/>
    <!--vivo 结束-->
    <!--小米 开始-->
    <permission
        android:name="com.tencent.flutter.tuikit.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature"/>
    <uses-permission
        android:name="com.tencent.flutter.tuikit.permission.MIPUSH_RECEIVE"/>
    <!--小米 结束-->
    <!--OPPO 开始-->
    <uses-permission
        android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE"/>
    <uses-permission
        android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE"/>
    <!--OPPO 结束-->
    <!--魅族 开始-->
    <!-- 可选，用于兼容 Flyme5 且推送服务是旧版本的情况-->
    <uses-permission
        android:name="android.permission.READ_PHONE_STATE"/>
    <!-- 兼容 Flyme5 的权限配置-->
    <uses-permission
        android:name="com.meizu.flyme.push.permission.RECEIVE"/>
    <permission
        android:name="com.tencent.flutter.tuikit.push.permission.MESSAGE"
        android:protectionLevel="signature"/>
    <uses-permission
        android:name="com.tencent.flutter.tuikit.push.permission.MESSAGE"/>
    <!-- 兼容 Flyme3 的权限配置-->
    <uses-permission
        android:name="com.meizu.c2dm.permission.RECEIVE"/>
    <permission
        android:name="com.tencent.flutter.tuikit.permission.C2D_MESSAGE"
        android:protectionLevel="signature"/>
    <uses-permission
        android:name="com.tencent.flutter.tuikit.permission.C2D_MESSAGE"/>
    <!--魅族 结束-->
    <!--华为 开始-->
    <uses-permission
        android:name="com.huawei.android.launcher.permission.CHANGE_BADGE "/>
    <uses-permission
        android:name="com.hihonor.android.launcher.permission.CHANGE_BADGE"/>
    <!--华为 结束-->
    <uses-permission
        android:name="android.permission.INTERNET"/>
    <uses-permission
        android:name="android.permission.RECORD_AUDIO"/>
    <uses-permission
        android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission
        android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission
        android:name="android.permission.VIBRATE"/>
    <uses-permission
        android:name="android.permission.ACCESS_BACKGROUND_LOCATION"/>
    <!-- Optional, you'll have to check this permission by yourself. -->
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <!-- Permissions options for the `camera` group -->
    <uses-permission
        android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
</manifest>