plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
    id 'com.huawei.agconnect'
    id 'com.hihonor.mcs.asplugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 34
    namespace("com.tencent.flutter.tuikit")
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.tencent.flutter.tuikit"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [
                VIVO_APPID:"",
                VIVO_APPKEY:"",
                applicationName : ""
        ]
    }

    signingConfigs {
        release {
            storeFile file('keystore_tuikit.jks')
            storePassword 'tencent'
            keyAlias 'izpan'
            keyPassword 'tencent'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.tencent.timpush:huawei:7.9.5668'
    implementation 'com.tencent.timpush:xiaomi:7.9.5668'
    implementation 'com.tencent.timpush:oppo:7.9.5668'
    implementation 'com.tencent.timpush:vivo:7.9.5668'
    implementation 'com.tencent.timpush:honor:7.9.5668'
    implementation 'com.tencent.timpush:meizu:7.9.5668'
    implementation 'com.tencent.timpush:fcm:7.9.5668'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
}
